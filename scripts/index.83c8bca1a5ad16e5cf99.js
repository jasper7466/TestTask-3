!function(e){var t={};function r(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(a,i,function(t){return e[t]}.bind(null,i));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){},function(e,t,r){"use strict";r.r(t);r(0);var a=document.querySelector(".main"),i=document.querySelector(".input__form"),s=document.querySelector(".input__field_city"),n=document.querySelector(".input__field_token"),o=new class{constructor(e){this._location=e,this._root=document.createElement("section"),this._root.classList.add("weather"),this._root.classList.add("weather_hidden"),this._root.insertAdjacentHTML("beforeend",'\n            <div class="weather__banner weather__banner_hidden">\n                <p class="weather__message">Идёт поиск</p>\n            </div>\n            <div class="weather__title-holder">\n                <p class="weather__city">Город</p>\n                <time class="weather__timestamp">Отметка времени</time>\n                <p class="weather__condition">Состояние погоды</p>\n            </div>\n            <div class="weather__data-holder">\n                <div class="weather__common-data">\n                    <img class="weather__icon" src="" alt="Пиктограмма погоды">\n                    <div class="weather__temperature">Т</div>\n                    <div class="weather__record weather__record_feel-like">\n                        <div class="weather__record weather__record_caption">Ощущается как&ensp;</div>\n                        <div class="weather__record weather__record_data">Т</div>\n                    </div>\n                </div>\n                <div class="weather__extra-data">\n                    <div class="weather__record weather__record_pressure">\n                        <div class="weather__record weather__record_caption">Атмосферное давление:&ensp;</div>\n                        <div class="weather__record weather__record_data">ХХХХ мм.рт.ст.</div>\n                    </div>\n                    <div class="weather__record weather__record_humidity">\n                        <div class="weather__record weather__record_caption">Влажность:&ensp;</div>\n                        <div class="weather__record weather__record_data">ХХ %</div>\n                    </div>\n                    <div class="weather__record weather__record_wind">\n                        <div class="weather__record weather__record_caption">Ветер:&ensp;</div>\n                        <div class="weather__record weather__record_data">Х м/с, Х</div>\n                    </div>\n                </div>\n            </div>\n            <p class="weather__recommends">Рекомендации</p>\n        '),this._city=this._root.querySelector(".weather__city"),this._timestamp=this._root.querySelector(".weather__timestamp"),this._condition=this._root.querySelector(".weather__condition"),this._icon=this._root.querySelector(".weather__icon"),this._temperature=this._root.querySelector(".weather__temperature"),this._feel=this._root.querySelector(".weather__record_feel-like").querySelector(".weather__record_data"),this._pressure=this._root.querySelector(".weather__record_pressure").querySelector(".weather__record_data"),this._humidity=this._root.querySelector(".weather__record_humidity").querySelector(".weather__record_data"),this._wind=this._root.querySelector(".weather__record_wind").querySelector(".weather__record_data"),this._recommends=this._root.querySelector(".weather__recommends"),this._banner=this._root.querySelector(".weather__banner"),this._message=this._root.querySelector(".weather__message"),this._location.appendChild(this._root)}_bannerShow(){this._banner.classList.remove("weather__banner_hidden")}bannerHide(){this._banner.classList.add("weather__banner_hidden")}bannerAwait(){this._message.textContent="Идёт поиск...",this._root.classList.remove("weather_hidden"),this._bannerShow()}bannerError(e){this._message.textContent=e,this._root.classList.remove("weather_hidden"),this._bannerShow()}directUpdate(e){this._city.textContent=e.city,this._timestamp.textContent=e.timestamp,this._condition.textContent=e.condition,this._icon.src=e.icon,this._temperature.textContent=e.temperature,this._feel.textContent=e.feel,this._pressure.textContent=e.pressure,this._humidity.textContent=e.humidity,this._wind.textContent=e.wind,this._recommends.textContent=e.recommends,this._root.classList.remove("weather_hidden")}}(a),_=new class{constructor(e){this._moduleName="OpenWeather",this._URL="https://api.openweathermap.org/data/2.5/weather",this._units="metric",this._lang="ru",this._key=e,this._data={city:void 0,timestamp:void 0,condition:void 0,icon:void 0,temperature:void 0,feel:void 0,pressure:void 0,humidity:void 0,wind:void 0,recommends:void 0,main:void 0}}updateKey(e){this._key=e}_makeRecommend(){let e="";const t=parseInt(this._data.temperature);switch(this._data.main){case"Thunderstorm":e="Возможны грозы, будьте осторожнее или останьтесь дома. ";break;case"Drizzle":case"Rain":e="На улице сыро и дождливо, не забудьте взять зонтик и обратите внимание на выбор обуви. ";break;case"Snow":e="В снежную погоду непромокаемая куртка с капюшоном явно не помешает .";break;case"Tornado":e="На улице не безопасно. ";break;case"Mist":case"Smoke":case"Haze":case"Dust":case"Fog":case"Sand":case"Ash":case"Squall":e="В воздухе присутствуют загрязнения. Позаботьтесь о защите органов дыхания и глаз. ";break;case"Clear":e="На небе ни облачка, защитите глаза и кожу от возможного воздействия солнечных лучей. "}return e+=t>30?"На улице очень жарко, защитите себя от перегрева.":t>18?"На улице достаточно тепло, одевайтесь по погоде.":t>10?"На улице умеренно тепло. Возможно, стоит взять с собой что-то тёплое.":t>0?"Прохладно. Куртка и шапка будут не лишними.":t>-15?"Умеренно холодно, одевайтесь теплее.":t>-25?"На улице холодно, одевайте тёплую одежду и обувь.":"Очень холодно, одевайте тёплую одежду и обувь. Защитите лицо и руки от обморожения.",e}_sendRequest(e){return fetch(e).then(e=>{if(e.ok)return e.json();switch(e.status){case 401:return Promise.reject("Ошибка авторизации.");case 404:return Promise.reject("Ничего не найдено =(")}return Promise.reject(`${this._moduleName}. Error: ${e.status}`)}).then(e=>{var t,r,a;return this._data.city=e.name,this._data.timestamp=(t=1e3*e.dt,r=new Date(t),a={year:r.getFullYear(),month:r.getMonth(),day:r.getDate(),hours:r.getHours(),minutes:r.getMinutes(),dayName:{full:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"][r.getDay()],short:["вс","пн","вт","ср","чт","пт","сб"][r.getDay()]},monthName:["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][r.getMonth()],monthNameNom:["январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"][r.getMonth()],printable:"",short:""},a.printable="".concat(a.day," ").concat(a.monthName,", ").concat(a.year," ").concat(a.hours,":").concat(a.minutes),a.short="".concat(a.day,", ").concat(a.dayName.short),a).printable,this._data.condition=e.weather[0].description,this._data.main=e.weather[0].main,this._data.icon=`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,this._data.temperature=Math.round(e.main.temp)+"°",this._data.feel=Math.round(e.main.feels_like)+" °C",this._data.pressure=e.main.pressure+" гПа",this._data.humidity=e.main.humidity+" %",this._data.wind=e.wind.speed+" м/с",this._data.recommends=this._makeRecommend(),console.log(this._data),this._data}).catch(e=>(console.log(`${this._moduleName}. Request failed: ${e}`),Promise.reject(e)))}getWeather(e){const t=`${this._URL}?q=${e}&units=${this._units}&lang=${this._lang}&appid=${this._key}`;return this._sendRequest(t)}},d=new class{constructor(e,t){this._form=e,this._key=this._form.elements[0],this._input=this._form.elements[1],this._button=this._form.elements[2],this._form.addEventListener("submit",e=>t(e))}lock(){this._button.setAttribute("disabled","true"),this._input.setAttribute("disabled","true"),this._key.setAttribute("disabled","true"),this._form.classList.add("input__form_disabled")}unlock(){this._button.removeAttribute("disabled"),this._input.removeAttribute("disabled"),this._key.removeAttribute("disabled"),this._form.classList.remove("input__form_disabled")}}(i,(function(e){e.preventDefault(),d.lock(),o.bannerAwait(),_.updateKey(n.value),_.getWeather(s.value).then((function(e){o.directUpdate(e),o.bannerHide()})).catch((function(e){o.bannerError(e)})).finally((function(){d.unlock()}))}))}]);