!function(e){var t={};function r(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(i,a,function(t){return e[t]}.bind(null,a));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){},function(e,t,r){"use strict";r.r(t);r(0);new class{constructor(e){this._location=e,this._root=document.createElement("section"),this._root.classList.add("weather"),this._root.classList.add("weather_hidden"),this._root.insertAdjacentHTML("beforeend",'\n            <div class="weather__title-holder">\n                <p class="weather__city">Город</p>\n                <time class="weather__timestamp">Отметка времени</time>\n                <p class="weather__condition">Состояние погоды</p>\n            </div>\n            <div class="weather__data-holder">\n                <div class="weather__common-data">\n                    <img class="weather__icon" src="" alt="Пиктограмма погоды">\n                    <div class="weather__temperature">Т</div>\n                    <div class="weather__record weather__record_feel-like">\n                        <div class="weather__record weather__record_caption">Ощущается как&ensp;</div>\n                        <div class="weather__record weather__record_data">Т</div>\n                    </div>\n                </div>\n                <div class="weather__extra-data">\n                    <div class="weather__record weather__record_pressure">\n                        <div class="weather__record weather__record_caption">Атмосферное давление:&ensp;</div>\n                        <div class="weather__record weather__record_data">ХХХХ мм.рт.ст.</div>\n                    </div>\n                    <div class="weather__record weather__record_humidity">\n                        <div class="weather__record weather__record_caption">Влажность:&ensp;</div>\n                        <div class="weather__record weather__record_data">ХХ %</div>\n                    </div>\n                    <div class="weather__record weather__record_wind">\n                        <div class="weather__record weather__record_caption">Ветер:&ensp;</div>\n                        <div class="weather__record weather__record_data">Х м/с, Х</div>\n                    </div>\n                </div>\n            </div>\n            <p class="weather__recommends">Рекомендации</p>\n        '),this._city=this._root.querySelector(".weather__city"),this._timestamp=this._root.querySelector(".weather__timestamp"),this._condition=this._root.querySelector(".weather__condition"),this._icon=this._root.querySelector(".weather__icon"),this._temperature=this._root.querySelector(".weather__temperature"),this._feel=this._root.querySelector(".weather__record_feel-like").querySelector(".weather__record_data"),this._pressure=this._root.querySelector(".weather__record_pressure").querySelector(".weather__record_data"),this._humidity=this._root.querySelector(".weather__record_humidity").querySelector(".weather__record_data"),this._wind=this._root.querySelector(".weather__record_wind").querySelector(".weather__record_data"),this._recommends=this._root.querySelector(".weather__recommends"),this._location.appendChild(this._root)}directUpdate(e){this._city.textContent=e.city,this._timestamp.textContent=e.timestamp,this._condition.textContent=e.condition,this._icon.src=e.icon,this._temperature.textContent=e.temperature,this._feel.textContent=e._feel,this._pressure.textContent=e.pressure,this._humidity.textContent=e.humidity,this._wind.textContent=e.wind,this._recommends.textContent=e.recommends}}(document.querySelector(".main")).directUpdate({city:"Челябинск",timestamp:"test",condition:"Ясно",icon:"http://openweathermap.org/img/wn/09d@2x.png",temperature:"15",feel:"11",pressure:"1000",humidity:"40",wind:"4 м/с, С",recommends:"Оденься теплее"}),new class{constructor(e){this._moduleName="OpenWeather",this._URL="https://api.openweathermap.org/data/2.5/weather",this._units="metric",this._lang="ru",this._key=e}_sendRequest(e){return fetch(e).then(e=>e.ok?(e=e.json(),this._raw=JSON.parse(JSON.stringify(e)),this._data.city=e.name,this._timestamp=e.dt,this._data.condition=e.weather.description,this._data.icon=`http://openweathermap.org/img/wn/${e.weather.icon}@2x.png`,this._data.temperature=e.main.temp,this._data.feel=e.main.feels_like,this._data.pressure=e.main.pressure,this._data.humidity=e.main.humidity,this._data.wind=e.wind.speed,this._data.recommends="dummy",this._data):Promise.reject(`${this._moduleName}. Error: ${e.status}`)).catch(e=>(console.log(`${this._moduleName}. Request failed: ${e}`),Promise.reject(e)))}getWeather(e){const t=`${this._URL}?q=${e}&units=${this._units}&lang=${this._lang}&appid=${this._key}`;return this._sendRequest(t)}}("368e827be4b38db51ff960ca88b5c396").getWeather("Лондон").then((function(e){})).catch((function(e){console.log(e)})).finally((function(){}))}]);